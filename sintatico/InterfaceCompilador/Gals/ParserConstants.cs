namespace InterfaceCompilador.Gals
{
    public abstract class ParserConstants
    {
        public int START_SYMBOL = 43;

        public int FIRST_NON_TERMINAL = 43;
        public int FIRST_SEMANTIC_ACTION = 86;

        public int[,] PARSER_TABLE =
        {
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  0, -1, -1, -1, -1, -1, -1 },
            { -1, -1,  1, -1, -1, -1, -1, -1,  2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  3,  3,  3,  3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  6,  6,  6,  6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  9, 10, 11, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 14, 14, 14, 14, -1, -1, -1, -1, -1, 14, 14, -1, -1, -1, -1, -1, -1, 14, -1, 14 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 17, 17, 17, 17, -1, -1, -1, -1, -1, 20, 18, -1, -1, -1, -1, -1, -1, 19, -1, 21 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 22, 22, 22, 22, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 23, 23, 23, 23, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 27, 27, 27, 27, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 30, -1, -1 },
            { -1, -1, -1, -1, -1, -1, 31, -1, -1, -1, 31, 31, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 31, 31, 31, 31, 31, 31, 31, -1, 31, -1, -1, -1, -1, -1, -1, 31, -1, -1, 31, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 42, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 43, 43, 43, 43, -1, -1, -1, -1, -1, 43, 43, -1, -1, -1, -1, -1, -1, 43, -1, 43 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 46 },
            { -1,  4, -1,  5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1,  8, -1,  8,  7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, 16, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 15, 15, 15, 15, -1, -1, -1, -1, -1, 15, 15, -1, -1, -1, -1, -1, -1, 15, -1, 15 },
            { -1, 25, -1, -1, 24, -1, -1, 25, -1, -1, -1, -1, -1, -1, 25, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, 28, -1, -1, -1, -1, -1, 29, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, 32, -1, -1, -1, -1, -1, 33, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 36, 35, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, 38, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 38, 38, 38, 38, -1, -1, -1, -1, -1, 38, 38, 37, -1, -1, -1, -1, -1, 38, -1, 38 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 40, 40, 40, -1, -1, -1, -1, -1, 40, 40, -1, 39, -1, -1, -1, -1, 40, -1, 40 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, 45, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 44, 44, 44, 44, -1, -1, -1, -1, -1, 44, 44, -1, -1, -1, -1, -1, -1, 44, -1, 44 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 48, 47, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, 49, -1, -1, -1, 49, 49, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 49, 49, 49, 49, 49, 49, 49, -1, 49, -1, -1, -1, -1, -1, -1, 49, -1, -1, 49, -1 },
            { -1, -1, -1, -1, -1, -1, 53, -1, -1, -1, 53, 53, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 53, 53, 53, 53, 53, 53, 53, -1, 55, -1, -1, -1, -1, -1, -1, 56, -1, -1, 54, -1 },
            { -1, -1, -1, -1, -1, -1, 57, -1, -1, -1, 57, 57, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 57, 57, 57, 57, 57, 57, 57, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, 61, 62, 63, 64, 65, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, 66, -1, -1, -1, 66, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 66, 66, 66, 66, 66, 66, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, 70, -1, -1, -1, 70, 70, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 70, 70, 70, 70, 70, 70, 70, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, 78, -1, -1, -1, 79, 80, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 74, 74, 74, 74, 75, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 81, 82, 83, 84, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, 85, -1, 85, 86, 85, -1, 85, -1, -1, 85, 85, 85, 85, -1, 85, 85, 85, 85, 85, 85, -1, -1, -1, -1, -1, -1, -1, -1, 85, -1, -1, -1, -1, -1, -1, -1, -1, 85, -1, -1, -1 },
            { -1, 52, -1, 52, -1, 52, -1, 52, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 50, -1, -1, -1, -1, -1, -1, -1, -1, 51, -1, -1, -1 },
            { -1, 59, -1, 59, -1, 59, -1, 59, -1, -1, -1, -1, -1, -1, -1, 58, 58, 58, 58, 58, 58, -1, -1, -1, -1, -1, -1, -1, -1, 59, -1, -1, -1, -1, -1, -1, -1, -1, 59, -1, -1, -1 },
            { -1, 69, -1, 69, -1, 69, -1, 69, -1, -1, 67, 68, -1, -1, -1, 69, 69, 69, 69, 69, 69, -1, -1, -1, -1, -1, -1, -1, -1, 69, -1, -1, -1, -1, -1, -1, -1, -1, 69, -1, -1, -1 },
            { -1, 73, -1, 73, -1, 73, -1, 73, -1, -1, 73, 73, 71, 72, -1, 73, 73, 73, 73, 73, 73, -1, -1, -1, -1, -1, -1, -1, -1, 73, -1, -1, -1, -1, -1, -1, -1, -1, 73, -1, -1, -1 }
        };

        public int[,] PRODUCTIONS = 
        {
            { 98, 36, 37, 44, 9, 49, 10, 99 },
            { 3, 45, 4, 0, 0, 0, 0, 0 },
            { 0, 0, 0, 0, 0, 0, 0, 0 },
            { 46, 62, 0, 0, 0, 0, 0, 0 },
            { 2, 45, 0, 0, 0, 0, 0, 0 },
            { 0, 0, 0, 0, 0, 0, 0, 0 },
            { 47, 107, 63, 108, 0, 0, 0, 0 },
            { 5, 48, 112, 6, 0, 0, 0, 0 },
            { 0, 0, 0, 0, 0, 0, 0, 0 },
            { 23, 0, 0, 0, 0, 0, 0, 0 },
            { 24, 0, 0, 0, 0, 0, 0, 0 },
            { 25, 0, 0, 0, 0, 0, 0, 0 },
            { 26, 0, 0, 0, 0, 0, 0, 0 },
            { 27, 0, 0, 0, 0, 0, 0, 0 },
            { 50, 64, 0, 0, 0, 0, 0, 0 },
            { 49, 0, 0, 0, 0, 0, 0, 0 },
            { 0, 0, 0, 0, 0, 0, 0, 0 },
            { 51, 0, 0, 0, 0, 0, 0, 0 },
            { 53, 0, 0, 0, 0, 0, 0, 0 },
            { 55, 0, 0, 0, 0, 0, 0, 0 },
            { 57, 0, 0, 0, 0, 0, 0, 0 },
            { 61, 0, 0, 0, 0, 0, 0, 0 },
            { 52, 15, 73, 111, 4, 0, 0, 0 },
            { 47, 107, 65, 0, 0, 0, 0, 0 },
            { 113, 5, 73, 6, 0, 0, 0, 0 },
            { 0, 0, 0, 0, 0, 0, 0, 0 },
            { 33, 7, 54, 8, 4, 0, 0, 0 },
            { 52, 66, 109, 0, 0, 0, 0, 0 },
            { 2, 54, 0, 0, 0, 0, 0, 0 },
            { 0, 0, 0, 0, 0, 0, 0, 0 },
            { 40, 7, 56, 8, 4, 0, 0, 0 },
            { 73, 97, 67, 0, 0, 0, 0, 0 },
            { 2, 56, 0, 0, 0, 0, 0, 0 },
            { 0, 0, 0, 0, 0, 0, 0, 0 },
            { 32, 7, 73, 8, 68, 115, 0, 0 },
            { 59, 69, 0, 0, 0, 0, 0, 0 },
            { 58, 70, 0, 0, 0, 0, 0, 0 },
            { 58, 0, 0, 0, 0, 0, 0, 0 },
            { 0, 0, 0, 0, 0, 0, 0, 0 },
            { 59, 0, 0, 0, 0, 0, 0, 0 },
            { 0, 0, 0, 0, 0, 0, 0, 0 },
            { 35, 114, 3, 9, 60, 10, 0, 0 },
            { 34, 114, 3, 9, 60, 10, 0, 0 },
            { 50, 71, 0, 0, 0, 0, 0, 0 },
            { 60, 0, 0, 0, 0, 0, 0, 0 },
            { 0, 0, 0, 0, 0, 0, 0, 0 },
            { 117, 42, 7, 73, 8, 72, 118, 0 },
            { 59, 0, 0, 0, 0, 0, 0, 0 },
            { 58, 0, 0, 0, 0, 0, 0, 0 },
            { 74, 82, 0, 0, 0, 0, 0, 0 },
            { 30, 74, 100, 82, 0, 0, 0, 0 },
            { 39, 74, 101, 82, 0, 0, 0, 0 },
            { 0, 0, 0, 0, 0, 0, 0, 0 },
            { 75, 0, 0, 0, 0, 0, 0, 0 },
            { 41, 102, 0, 0, 0, 0, 0, 0},
            { 31, 103, 0, 0, 0, 0, 0, 0 },
            { 38, 74, 104, 0, 0, 0, 0, 0 },
            { 77, 83, 0, 0, 0, 0, 0, 0 },
            { 76, 77, 0, 0, 0, 0, 0, 0 },
            { 0, 0, 0, 0, 0, 0, 0, 0 },
            { 16, 0, 0, 0, 0, 0, 0, 0 },
            { 17, 0, 0, 0, 0, 0, 0, 0 },
            { 18, 0, 0, 0, 0, 0, 0, 0 },
            { 19, 0, 0, 0, 0, 0, 0, 0 },
            { 20, 0, 0, 0, 0, 0, 0, 0 },
            { 21, 0, 0, 0, 0, 0, 0, 0 },
            { 78, 84, 0, 0, 0, 0, 0, 0 },
            { 11, 78, 87, 84, 0, 0, 0, 0 },
            { 12, 78, 88, 84, 0, 0, 0, 0 },
            { 0, 0, 0, 0, 0, 0, 0, 0 },
            { 79, 85, 0, 0, 0, 0, 0, 0 },
            { 13, 79, 89, 85, 0, 0, 0, 0 },
            { 14, 79, 90, 85, 0, 0, 0, 0 },
            { 0, 0, 0, 0, 0, 0, 0, 0 },
            { 80, 107, 81, 110, 0, 0, 0, 0 },
            { 27, 0, 0, 0, 0, 0, 0, 0 },
            { 28, 0, 0, 0, 0, 0, 0, 0 },
            { 29, 105, 0, 0, 0, 0, 0, 0 },
            { 7, 73, 8, 0, 0, 0, 0, 0 },
            { 11, 79, 93, 0, 0, 0, 0, 0 },
            { 12, 79, 94, 0, 0, 0, 0, 0 },
            { 23, 0, 0, 0, 0, 0, 0, 0 },
            { 24, 0, 0, 0, 0, 0, 0, 0 },
            { 25, 0, 0, 0, 0, 0, 0, 0 },
            { 26, 0, 0, 0, 0, 0, 0, 0 },
            { 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 73, 6, 0, 0, 0, 0, 0 },
        };

        public string[] PARSER_ERROR =
        {
            "",
            "fim de programa",//"esperado fim de programa",
            ",",//"esperado \",\"",
            ":",//"esperado \":\"",
            ";",//"esperado \";\"",
            "[",//"esperado \"[\"",
            "]",//"esperado \"]\"",
            "(",//"esperado \"(\"",
            ")",//"esperado \")\"",
            "{",//"esperado \"{\"",
            "}",//"esperado \"}\"",
            "+",//"esperado \"+\"",
            "-",//"esperado \"-\"",
            "*",//"esperado \"*\"",
            "/",//"esperado \"/\"",
            "<-",//"esperado \"<-\"",
            "=",//"esperado \"=\"",
            "!=",//"esperado \"!=\"",
            "<",//"esperado \"<\"",
            "<=",//"esperado \"<=\"",
            ">",//"esperado \">\"",
            ">=",//"esperado \">=\"",
            "palavraReservada",//"esperado palavraReservada",
            "identificador",//"esperado identificadorInt",
            "identificador",//"esperado identificadorFloat",
            "identificador",//"esperado identificadorString",
            "identificador",//"esperado identificadorBool",
            "constanteInt",//"esperado constanteInt",
            "constanteFloat",//"esperado constanteFloat",
            "constanteString",//"esperado constanteString",
            //"comentarioBloco",//"esperado comentarioBloco",
            "and",//"esperado and",
            "false",//"esperado false",
            "if",//"esperado if",
            "in",//"esperado in",
            "isFalseDo",//"esperado isFalseDo",
            "isTrueDo",//"esperado isTrueDo",
            "main",//"esperado main",
            "module",//"esperado module",
            "not",//"esperado not",
            "or",//"esperado or",
            "out",//"esperado out",
            "true",//"esperado true",
            "while",//"esperado while",
            "main",//"esperado main",
            ": {",//"<variaveis> inválido",
            "identificador",//"<listavariaveis> inválido",
            "identificador",//"<identificador> inválido",
            "identificador",//"<tipoidentificadores> inválido",
            "constante inteira",//"<constanteint> inválido",
            "comando",//"<comandos> inválido",
            "comando",//"<comando> inválido",
            "identificador",//"<comandoatribuicao> inválido",
            "identificador",//"<identificadorcomando> inválido",
            "in",//"<comandoentrada> inválido",
            "identificador",//"<listaidentificadores> inválido",
            "out",//"<comandosaida> inválido",
            "expressão",//"<listaexpressoes> inválido",
            "if",//"<comandoselecao> inválido",
            "isFalseDo",//"<clausulaisfalsedo> inválido",
            "isTrueDo",//"<clausulaistruedo> inválido",
            "comando",//"<listacomandos> inválido",
            "while",//"<comandorepeticao> inválido",
            ", ;",//"<listavariaveis2> inválido",
            ", ; [",//"<identificador2> inválido",
            "} comando",//"<comandos2> inválido",
            ", [ ) <-",//"<identificadorcomando2> inválido",
            ", )",//"<listaidentificadores2> inválido",
            ", )",//"<listaexpressoes2> inválido",
            "isFalseDo isTrueDo",//"<comandoselecao2> inválido",
            "} comando isFalseDo",//"<comandoselecao3> inválido",
            "} comando isTrueDo",//"<comandoselecao4> inválido",
            "} comando",//"<listacomandos2> inválido",
            "isFalseDo isTrueDo",//"<comandorepeticao2> inválido",
            "expressão",//"<expressao> inválido",
            "expressão",//"<elemento> inválido",
            "expressão",//"<relacional> inválido",
            "expressão",//"<operador_relacional> inválido",
            "expressão",//"<aritmetica> inválido",
            "expressão",//"<termo> inválido",
            "expressão",//"<fator> inválido",
            "identificador",//"<identificador_variavel> inválido",
            ",  ;  [  ]  )  operador binário (aritmético, lógico,  relacional)",//"<vetor_uso> inválido",
            "expressão",//"<expressao1> inválido",
            "expressão",//"<relacional1> inválido",
            "expressão",//"<aritmetica1> inválido",
            "expressão"//"<termo1> inválido"
        };
    }
}
