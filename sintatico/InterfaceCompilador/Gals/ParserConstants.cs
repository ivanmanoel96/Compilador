namespace InterfaceCompilador.Gals
{
    public abstract class ParserConstants
    {
        public int START_SYMBOL = 44;

        public int FIRST_NON_TERMINAL = 44;
        public int FIRST_SEMANTIC_ACTION = 87;

        public int[,] PARSER_TABLE =
        {
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  0, -1, -1, -1, -1, -1, -1 },
            { -1, -1,  1, -1, -1, -1, -1, -1,  2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  3,  3,  3,  3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  6,  6,  6,  6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  9, 10, 11, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 14, 14, 14, 14, -1, -1, -1, -1, -1, -1, 14, 14, -1, -1, -1, -1, -1, -1, 14, -1, 14 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 17, 17, 17, 17, -1, -1, -1, -1, -1, -1, 20, 18, -1, -1, -1, -1, -1, -1, 19, -1, 21 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 22, 22, 22, 22, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 23, 23, 23, 23, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 27, 27, 27, 27, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 30, -1, -1 },
            { -1, -1, -1, -1, -1, -1, 31, -1, -1, -1, 31, 31, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 31, 31, 31, 31, 31, 31, 31, -1, -1, 31, -1, -1, -1, -1, -1, -1, 31, -1, -1, 31, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 42, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 43, 43, 43, 43, -1, -1, -1, -1, -1, -1, 43, 43, -1, -1, -1, -1, -1, -1, 43, -1, 43 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 46 },
            { -1,  4, -1,  5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1,  8, -1,  8,  7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, 16, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 15, 15, 15, 15, -1, -1, -1, -1, -1, -1, 15, 15, -1, -1, -1, -1, -1, -1, 15, -1, 15 },
            { -1, 25, -1, -1, 24, -1, -1, 25, -1, -1, -1, -1, -1, -1, 25, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, 28, -1, -1, -1, -1, -1, 29, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, 32, -1, -1, -1, -1, -1, 33, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 36, 35, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, 38, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 38, 38, 38, 38, -1, -1, -1, -1, -1, -1, 38, 38, 37, -1, -1, -1, -1, -1, 38, -1, 38 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 40, 40, 40, -1, -1, -1, -1, -1, -1, 40, 40, -1, 39, -1, -1, -1, -1, 40, -1, 40 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, 45, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 44, 44, 44, 44, -1, -1, -1, -1, -1, -1, 44, 44, -1, -1, -1, -1, -1, -1, 44, -1, 44 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 48, 47, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, 49, -1, -1, -1, 49, 49, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 49, 49, 49, 49, 49, 49, 49, -1, -1, 49, -1, -1, -1, -1, -1, -1, 49, -1, -1, 49, -1 },
            { -1, -1, -1, -1, -1, -1, 53, -1, -1, -1, 53, 53, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 53, 53, 53, 53, 53, 53, 53, -1, -1, 55, -1, -1, -1, -1, -1, -1, 56, -1, -1, 54, -1 },
            { -1, -1, -1, -1, -1, -1, 57, -1, -1, -1, 57, 57, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 57, 57, 57, 57, 57, 57, 57, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, 61, 62, 63, 64, 65, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, 66, -1, -1, -1, 66, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 66, 66, 66, 66, 66, 66, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, 70, -1, -1, -1, 70, 70, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 70, 70, 70, 70, 70, 70, 70, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, 78, -1, -1, -1, 79, 80, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 74, 74, 74, 74, 75, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 81, 82, 83, 84, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, 85, -1, 85, 86, 85, -1, 85, -1, -1, 85, 85, 85, 85, -1, 85, 85, 85, 85, 85, 85, -1, -1, -1, -1, -1, -1, -1, -1, -1, 85, -1, -1, -1, -1, -1, -1, -1, -1, 85, -1, -1, -1 },
            { -1, 52, -1, 52, -1, 52, -1, 52, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 50, -1, -1, -1, -1, -1, -1, -1, -1, 51, -1, -1, -1 },
            { -1, 59, -1, 59, -1, 59, -1, 59, -1, -1, -1, -1, -1, -1, -1, 58, 58, 58, 58, 58, 58, -1, -1, -1, -1, -1, -1, -1, -1, -1, 59, -1, -1, -1, -1, -1, -1, -1, -1, 59, -1, -1, -1 },
            { -1, 69, -1, 69, -1, 69, -1, 69, -1, -1, 67, 68, -1, -1, -1, 69, 69, 69, 69, 69, 69, -1, -1, -1, -1, -1, -1, -1, -1, -1, 69, -1, -1, -1, -1, -1, -1, -1, -1, 69, -1, -1, -1 },
            { -1, 73, -1, 73, -1, 73, -1, 73, -1, -1, 73, 73, 71, 72, -1, 73, 73, 73, 73, 73, 73, -1, -1, -1, -1, -1, -1, -1, -1, -1, 73, -1, -1, -1, -1, -1, -1, -1, -1, 73, -1, -1, -1 }
        };

        public int[,] PRODUCTIONS = 
        {
            { 37, 38, 45, 9, 50, 10 },
            { 3, 46, 4, 0, 0, 0 },
            { 0, 0, 0, 0, 0, 0 },
            { 47, 63, 0, 0, 0, 0 },
            { 2, 46, 0, 0, 0, 0 },
            { 0, 0, 0, 0, 0, 0 },
            { 48, 64, 0, 0, 0, 0 },
            { 5, 49,  6, 0, 0, 0 },
            { 0, 0, 0, 0, 0, 0 },
            { 23, 0, 0, 0, 0, 0 },
            { 24, 0, 0, 0, 0, 0 },
            { 25, 0, 0, 0, 0, 0 },
            { 26, 0, 0, 0, 0, 0 },
            { 27, 0, 0, 0, 0, 0 },
            { 51, 65, 0, 0, 0, 0 },
            { 50, 0, 0, 0, 0, 0 },
            { 0, 0, 0, 0, 0,  0 },
            { 52, 0, 0, 0, 0, 0 },
            { 54, 0, 0, 0, 0, 0 },
            { 56, 0, 0, 0, 0, 0 },
            { 58, 0, 0, 0, 0, 0 },
            { 62, 0, 0, 0, 0, 0 },
            { 53, 15, 74, 4, 0, 0 },
            { 48, 66, 0, 0, 0, 0 },
            { 5, 74,  6, 0, 0, 0 },
            { 0, 0, 0, 0, 0, 0 },
            { 34, 7, 55, 8, 4, 0 },
            { 53, 67, 0, 0, 0, 0 },
            { 2, 55, 0, 0, 0, 0 },
            { 0, 0, 0, 0, 0 ,0 },
            { 41,  7, 57,  8,  4, 0 },
            { 74, 68, 0, 0, 0, 0 },
            { 2, 57, 0, 0, 0, 0 },
            { 0, 0, 0, 0, 0 ,0 },
            { 33,  7, 74,  8, 69, 0 },
            { 60, 70, 0, 0, 0, 0 },
            { 59, 71, 0, 0, 0, 0 },
            { 59, 0, 0, 0, 0 ,0 },
            { 0, 0, 0, 0, 0 ,0 },
            { 60, 0, 0, 0, 0 ,0 },
            { 0, 0, 0, 0, 0 ,0 },
            { 36,  3,  9, 61, 10, 0 },
            { 35,  3,  9, 61, 10, 0 },
            { 51, 72, 0, 0, 0, 0 },
            { 61, 0, 0, 0, 0 ,0 },
            { 0, 0, 0, 0, 0 ,0 },
            { 43,  7, 74,  8, 73, 0 },
            { 60, 0, 0, 0, 0 ,0 },
            { 59, 0, 0, 0, 0 ,0 },
            { 75, 83, 0, 0, 0, 0 },
            { 31, 75, 83, 0, 0, 0 },
            { 40, 75, 83, 0, 0, 0 },
            { 0, 0, 0, 0, 0 ,0 },
            { 76, 0, 0, 0, 0 ,0 },
            { 42, 0, 0, 0, 0 ,0 },
            { 32, 0, 0, 0, 0 ,0 },
            { 39, 75, 0, 0, 0, 0 },
            { 78, 84, 0, 0, 0, 0 },
            { 77, 78, 0, 0, 0, 0 },
            { 0, 0, 0, 0, 0 ,0 },
            { 16, 0, 0, 0, 0 ,0 },
            { 17, 0, 0, 0, 0 ,0 },
            { 18, 0, 0, 0, 0 ,0 },
            { 19, 0, 0, 0, 0 ,0 },
            { 20, 0, 0, 0, 0 ,0 },
            { 21, 0, 0, 0, 0 ,0 },
            { 79, 85, 0, 0, 0, 0 },
            { 11, 79, 85, 0, 0, 0 },
            { 12, 79, 85, 0, 0, 0 },
            { 0, 0, 0, 0, 0 ,0 },
            { 80, 86, 0, 0, 0, 0 },
            { 13, 80, 86, 0, 0, 0 },
            { 14, 80, 86, 0, 0, 0 },
            { 0, 0, 0, 0, 0 ,0 },
            { 81, 82, 0, 0, 0, 0 },
            { 27, 0, 0, 0, 0 ,0 },
            { 28, 0, 0, 0, 0 ,0 },
            { 29, 0, 0, 0, 0 ,0 },
            { 7, 74,  8, 0, 0, 0 },
            { 11, 80, 0, 0, 0, 0 },
            { 12, 80, 0, 0, 0, 0 },
            { 23, 0, 0, 0, 0 ,0 },
            { 24, 0, 0, 0, 0 ,0 },
            { 25, 0, 0, 0, 0 ,0 },
            { 26, 0, 0, 0, 0 ,0 },
            { 0, 0, 0, 0, 0 ,0},
            { 5, 74,  6, 0, 0, 0 }
        };

        public string[] PARSER_ERROR =
        {
            "",
            "esperado fim de programa",
            "esperado \",\"",
            "esperado \":\"",
            "esperado \";\"",
            "esperado \"[\"",
            "esperado \"]\"",
            "esperado \"(\"",
            "esperado \")\"",
            "esperado \"{\"",
            "esperado \"}\"",
            "esperado \"+\"",
            "esperado \"-\"",
            "esperado \"*\"",
            "esperado \"/\"",
            "esperado \"<-\"",
            "esperado \"=\"",
            "esperado \"!=\"",
            "esperado \"<\"",
            "esperado \"<=\"",
            "esperado \">\"",
            "esperado \">=\"",
            "esperado palavraReservada",
            "esperado identificador",
            "esperado identificador",
            "esperado identificador",
            "esperado identificadorl",
            "esperado constanteInt",
            "esperado constanteFloat",
            "esperado constanteString",
            "esperado comentarioBloco",
            "esperado and",
            "esperado false",
            "esperado if",
            "esperado in",
            "esperado isFalseDo",
            "esperado isTrueDo",
            "esperado main",
            "esperado module",
            "esperado not",
            "esperado or",
            "esperado out",
            "esperado true",
            "esperado while",
            "esperado main",
            "<variaveis> inválido",
            "<listavariaveis> inválido",
            "<identificador> inválido",
            "<tipoidentificadores> inválido",
            "<constanteint> inválido",
            "<comandos> inválido",
            "<comando> inválido",
            "<comandoatribuicao> inválido",
            "<identificadorcomando> inválido",
            "<comandoentrada> inválido",
            "<listaidentificadores> inválido",
            "<comandosaida> inválido",
            "<listaexpressoes> inválido",
            "<comandoselecao> inválido",
            "<clausulaisfalsedo> inválido",
            "<clausulaistruedo> inválido",
            "<listacomandos> inválido",
            "<comandorepeticao> inválido",
            "<listavariaveis2> inválido",
            "<identificador2> inválido",
            "<comandos2> inválido",
            "<identificadorcomando2> inválido",
            "<listaidentificadores2> inválido",
            "<listaexpressoes2> inválido",
            "<comandoselecao2> inválido",
            "<comandoselecao3> inválido",
            "<comandoselecao4> inválido",
            "<listacomandos2> inválido",
            "<comandorepeticao2> inválido",
            "<expressao> inválido",
            "<elemento> inválido",
            "<relacional> inválido",
            "<operador_relacional> inválido",
            "<aritmetica> inválido",
            "<termo> inválido",
            "<fator> inválido",
            "<identificador_variavel> inválido",
            "<vetor_uso> inválido",
            "<expressao1> inválido",
            "<relacional1> inválido",
            "<aritmetica1> inválido",
            "<termo1> inválido"
        };
    }
}
